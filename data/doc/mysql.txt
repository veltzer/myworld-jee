- if you get this error:
	ERROR 1075 (42000): Incorrect table definition; there can be only one auto column and it must be defined as a key

	Then you are probably trying to create an InnoDB table with no primary key but with auto increatement. You need the "PRIMARY KEY (`id`)" in there...

- to load data from a text tab delimited file:
	the first line will set the next id given to the primary key (sometimes mysql has problems
	with it...)
	ALTER TABLE TbAbItems AUTO_INCREMENT = 1;
	load data local infile 'file.data' into table TbAbItems (author,name,type,strdate,location,rating,review);

- to add a field to a table:
	ALTER TABLE TbAbItems ADD producer VARCHAR(60);
	you can do:
	ALTER TABLE TbAbItems ADD producer VARCHAR(60) after foobar;
	to put it in a specific place.

- updating fields from other fields:
	update TbAbItems set producer="TTC" where type="TTC";

- inserting data only to specific columns:
	insert into TbAbProducers (name,url) values('TTC','http://www.teach12.com/');
	You may wish to set the automatic id which is given by:
	ALTER TABLE TbAbItems AUTO_INCREMENT = 1;

- adding a foreign key to a table which previously didnt have one.
	ALTER TABLE TbAbItems ADD producer int NOT NULL references TbFoo(id) after foobar;
	*** Important ***
	In InnoDb this does not create the constraint. You have to use this syntax after:
	alter table TbAbItems add foreign key fk_producerId (producerId) references TbAbProducers(id);
	(this will fail if the values in the column to be a foreign key do not work with the constraint).
	When you have a proper constraint in an InnoDb table it SHOULD appear in a
	show create table. If it does not it means you have no constraint.

- dropping a foreign key:
	alter table TbAbItems drop foreign key TbAbItems_ibfk_2;

- seeing all constraints of a table:
	SELECT * FROM information_schema.key_column_usage  WHERE table_schema = 'myworld' AND table_name = 'TbAbItems'\G

- dropping a NOT NULL and allowing NULLs:
	alter table TbAbItems change producerId producerId int NULL;

- renaming a table:
	RENAME TABLE student TO student_new;
	(dont worry - foreign key things are renamed automatically to match...).

- selecting distinct/unique values:
	select distinct type from TbWkWork;

- dropping a field:
	alter table [table] drop [field];

- renaming a field:
	alter table rss_feed change unsubscribe_url referring_url [type];
	* unfortunatey you do have to plug in the type...

- moving data between tables:
	INSERT INTO TABLE2 (COL1, COL2, COL3) SELECT COL1, COL4, COL7 FROM TABLE1;

- adding a key/index to a table:
	- regular search key without giving name to the key:
	alter table TbIdPerson add key (firstname);
	- regular search key with giving name to the key:
	alter table TbIdPerson add key firstname(firstname);
	- dropping the key:
	alter table TbIdPerson drop key firstname;
	- make a column be unique:
	alter table TbBsCompanies add unique(slug);
	- unique key made up of several columns without giving name:
	alter table TbIdPerson add unique key (firstname,surname,othername,ordinal);

- creating a user:
	CREATE USER 'mark'@'localhost' IDENTIFIED BY '';
	GRANT ALL PRIVILEGES ON *.* TO 'mark'@'localhost' WITH GRANT OPTION;

- resetting a password:
	set password='';

- creating thumbnails on the cmd line:
	convert -thumbnail 64x64 mysql.png ../mysql.png
	if you want to convert a whole bunch:
	for x in *.gif; do y=`basename "$x" .gif`; convert "$x" "$y.png"; echo $y;done

- showing help from the command line:
	\h
- history from the command line:
	just scroll up and down using the arrows
	maybe there is a set of history commands but I haven't found them.
